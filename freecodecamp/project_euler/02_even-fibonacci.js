/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ... 
By considering the terms in the Fibonacci sequence that do not exceed the nth term, find the sum of the even-valued terms.

*/
function fiboEvenSum(n) {
  let total = 0;
  for (let i = 1; i <= n; i++) {
    cur = n + (n - i);
    console.log(cur);
    if (cur % 2 == 0) {
      total += cur;
    }
  }
  return total;
}
console.log(fiboEvenSum(10));

function fib(n) {
  if (n < 2) return n;
  return fib(n - 2) + fib(n - 1);
}
fib(8); //21

function fiboEvenSum(n) {
  // let total = 0;
  let arr = [0, 1];
  for (let i = 2; i <= n + 1; i++) {
    let num = arr[i - 2] + arr[i - 1];
    arr.push(num);
  }
  console.log(arr);
  return arr.reduce((total, current) => {
    if (current % 2 == 0) {
      return total + current;
    } else {
      return total;
    }
  });
}
fiboEvenSum(10); // 44
fiboEvenSum(18); // 3382
fiboEvenSum(23); // 60696
fiboEvenSum(43); // 350704366
